


arr, dp = 
==================================================================================

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
                                       ( arr[prevIndex] < arr[i] &&  1 + dp[prevIndex] > dp[i] )
int[] dp = new int[n];
Arrays.fill(dp, 1);

------------------------
| 1 | 1 | 1 | 1 | 1 | 1|    <-- dp
------------------------
  0   1   2   3   4   5                ( dp[i] = 1 + dp[prevIndex] )

------------------------
| 1 | 1 | 1 | 1 | 1 | 1|    <-- hash
------------------------
  0   1   2   3   4   5                ( hash[i] = i ), ( hash[i] = prevIndex )

==================================================================================

for(int i = 0; i <= n - 1; i++)
    {
        for(int prevIndex = 0; prevIndex <= i - 1; prevIndex++ )
        {
            if( arr[prevIndex] < arr[i] &&  1 + dp[prevIndex] > dp[i] )
            {
                dp[i] = 1 + dp[prevIndex];
            }
        }
    }

prev_Index = 0, i = 1

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr 
------------------------
  0   1   2   3   4   5
  ^   ^
  p   i                               ( arr[0] < arr[1] &&  1 + dp[0] > dp[1] ) : true

------------------------
| 1 | 2 | 1 | 1 | 1 | 1|    <-- dp
------------------------
  0   1   2   3   4   5
  ^   ^
  p   i                               ( dp[1] = 1 + dp[0] ) : 2

------------------------
| 1 | 0 | 1 | 1 | 1 | 1|    <-- hash
------------------------
  0   1   2   3   4   5               ( hash[1] = 0 )

==================================================================================

prev_Index = 0, i = 2

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
  0   1   2   3   4   5
  ^       ^
  p       i                           ( arr[0] < arr[2] &&  1 + dp[0] > dp[2] ) : true

------------------------
| 1 | 2 | 2 | 1 | 1 | 1|    <-- dp
------------------------
  0   1   2   3   4   5
  ^       ^
  p       i                           ( dp[2] = 1 + dp[0] ) : 2

------------------------
| 1 | 0 | 0 | 1 | 1 | 1|    <-- hash
------------------------
  0   1   2   3   4   5               ( hash[2] = 0 )

=================================================================================

prev_Index = 1, i = 2

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
  0   1   2   3   4   5
      ^   ^  
      p   i                           ( arr[1] < arr[2] &&  1 + dp[1] > dp[2] ) : false

------------------------
| 1 | 2 | 2 | 1 | 1 | 1|    <-- dp
------------------------
  0   1   2   3   4   5
      ^   ^
      p   i

------------------------
| 1 | 0 | 0 | 1 | 1 | 1|    <-- hash
------------------------
  0   1   2   3   4   5               

=================================================================================

prev_Index = 0, i = 3

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
  0   1   2   3   4   5
  ^           ^  
  p           i                       ( arr[0] < arr[3] &&  1 + dp[0] > dp[3] ) : true

------------------------
| 1 | 2 | 2 | 2 | 1 | 1|    <-- dp
------------------------
  0   1   2   3   4   5
  ^           ^
  p           i                       ( dp[3] = 1 + dp[0] ) : 2

------------------------
| 1 | 0 | 0 | 0 | 1 | 1|    <-- hash
------------------------
  0   1   2   3   4   5               ( hash[3] = 0 )

=================================================================================

prev_Index = 1, i = 3

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
  0   1   2   3   4   5
      ^       ^  
      p       i                       ( arr[1] < arr[3] &&  1 + dp[1] > dp[3] ) : false

------------------------
| 1 | 2 | 2 | 2 | 1 | 1|    <-- dp
------------------------
  0   1   2   3   4   5
      ^       ^
      p       i                   

------------------------
| 1 | 0 | 0 | 0 | 1 | 1|    <-- hash
------------------------
  0   1   2   3   4   5                

=================================================================================

prev_Index = 2, i = 3

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
  0   1   2   3   4   5
          ^   ^  
          p   i                       ( arr[2] < arr[3] &&  1 + dp[2] > dp[3] ) : true

------------------------
| 1 | 2 | 2 | 3 | 1 | 1|    <-- dp
------------------------
  0   1   2   3   4   5
          ^   ^
          p   i                       ( dp[3] = 1 + dp[2] ) : 3

------------------------
| 1 | 0 | 0 | 2 | 1 | 1|    <-- hash
------------------------
  0   1   2   3   4   5               ( hash[3] = 2 )    

=================================================================================

prev_Index = 0, i = 4

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
  0   1   2   3   4   5
  ^               ^  
  p               i                    ( arr[0] < arr[4] &&  1 + dp[0] > dp[4] ) : true

------------------------
| 1 | 2 | 2 | 3 | 2 | 1|    <-- dp
------------------------
  0   1   2   3   4   5
  ^               ^
  p               i                    ( dp[4] = 1 + dp[0] ) : 2

------------------------
| 1 | 0 | 0 | 2 | 0 | 1|    <-- hash
------------------------
  0   1   2   3   4   5                ( hash[4] = 0 ) 

=================================================================================

prev_Index = 1, i = 4

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
  0   1   2   3   4   5
      ^           ^  
      p           i                    ( arr[1] < arr[4] &&  1 + dp[1] > dp[4] ) : false

------------------------
| 1 | 2 | 2 | 3 | 2 | 1|    <-- dp
------------------------
  0   1   2   3   4   5
      ^           ^
      p           i               

------------------------
| 1 | 0 | 0 | 2 | 0 | 1|    <-- hash
------------------------
  0   1   2   3   4   5                    
 
=================================================================================

prev_Index = 2, i = 4

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
  0   1   2   3   4   5
          ^       ^  
          p       i                    ( arr[2] < arr[4] &&  1 + dp[2] > dp[4] ) : true

------------------------
| 1 | 2 | 2 | 3 | 3 | 1|    <-- dp
------------------------
  0   1   2   3   4   5
          ^       ^
          p       i                    ( dp[4] = 1 + dp[2] ) : 3

------------------------
| 1 | 0 | 0 | 2 | 2 | 1|     <-- hash
------------------------
  0   1   2   3   4   5                ( hash[4] = 2 )    
 
=================================================================================

prev_Index = 3, i = 4

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
  0   1   2   3   4   5
              ^   ^  
              p   i                    ( arr[3] < arr[4] &&  1 + dp[3] > dp[4] ) : false

------------------------
| 1 | 2 | 2 | 3 | 3 | 1|    <-- dp
------------------------
  0   1   2   3   4   5
              ^   ^
              p   i        

------------------------
| 1 | 0 | 0 | 2 | 2 | 1|    <-- hash
------------------------
  0   1   2   3   4   5                       
 
=================================================================================

prev_Index = 0, i = 5

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
  0   1   2   3   4   5
  ^                   ^  
  p                   i                ( arr[0] < arr[5] &&  1 + dp[0] > dp[5] ) : true

------------------------
| 1 | 2 | 2 | 3 | 3 | 2|    <-- dp
------------------------
  0   1   2   3   4   5
  ^                   ^  
  p                   i                ( dp[5] = 1 + dp[0] ) : 2

------------------------
| 1 | 0 | 0 | 2 | 2 | 0|    <-- hash
------------------------
  0   1   2   3   4   5                ( hash[5] = 0 )   
 
=================================================================================

prev_Index = 1, i = 5

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
  0   1   2   3   4   5
      ^               ^  
      p               i                ( arr[1] < arr[5] &&  1 + dp[1] > dp[5] ) : false

------------------------
| 1 | 2 | 2 | 3 | 3 | 2|    <-- dp
------------------------
  0   1   2   3   4   5
      ^               ^  
      p               i     

------------------------
| 1 | 0 | 0 | 2 | 2 | 1|   <-- hash
------------------------
  0   1   2   3   4   5                         
  
=================================================================================

prev_Index = 2, i = 5

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
  0   1   2   3   4   5
          ^           ^  
          p           i                ( arr[2] < arr[5] &&  1 + dp[2] > dp[5] ) : true

------------------------
| 1 | 2 | 2 | 3 | 3 | 3|    <-- dp
------------------------
  0   1   2   3   4   5
          ^           ^  
          p           i               ( dp[5] = 1 + dp[2] ) : 3

------------------------
| 1 | 0 | 0 | 2 | 2 | 2|   <-- hash
------------------------
  0   1   2   3   4   5               ( hash[5] = 2 )  
  
=================================================================================

prev_Index = 3, i = 5

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
  0   1   2   3   4   5
              ^       ^  
              p       i                ( arr[3] < arr[5] &&  1 + dp[3] > dp[5] ) : false

------------------------
| 1 | 2 | 2 | 3 | 3 | 3|    <-- dp
------------------------
  0   1   2   3   4   5
              ^       ^  
              p       i                

------------------------
| 1 | 0 | 0 | 2 | 2 | 2|    <-- hash
------------------------
  0   1   2   3   4   5                

=================================================================================
prev_Index = 4, i = 5

------------------------
| 1 | 6 | 2 | 5 | 3 | 4|    <-- arr
------------------------
  0   1   2   3   4   5
                  ^   ^  
                  p   i                ( arr[4] < arr[5] &&  1 + dp[4] > dp[5] ) : true

------------------------
| 1 | 2 | 2 | 3 | 3 | 4|    <-- dp
------------------------
  0   1   2   3   4   5
                  ^   ^  
                  p   i                ( dp[5] = 1 + dp[4] ) : 4

------------------------
| 1 | 0 | 0 | 2 | 2 | 4|    <-- hash
------------------------
  0   1   2   3   4   5                ( hash[5] = 4 )  
  
=================================================================================

for(int i = 0; i <= n - 1; i++)
{
    if(dp[i]> ans)
    {
        ans = dp[i];
        last_Index = i;
    }
}


last_Index = 5

while(hash[last_Index] != last_Index)
{
    last_Index = hash[last_Index];
    lis.add(0, arr[last_Index]);
}

------------------------------------
Indexes ->  5  ->  4  ->  2  ->  0 |
------------------------------------
LIS     ->  4  ->  3  ->  2  ->  1 |
------------------------------------
          
